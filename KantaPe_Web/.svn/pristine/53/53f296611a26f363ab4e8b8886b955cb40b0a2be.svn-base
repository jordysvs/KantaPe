using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System.Text;
using Kruma.KantaPe.Service.Interface;
using System.ServiceModel.Activation;
using Kruma.Core.Util.Common;
using Kruma.KantaPe.Entidad;
using Kruma.KantaPe.Service.Entity;

namespace Kruma.KantaPe.Service.Logical
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    public class AperturaUsuario : IAperturaUsuario
    {
        #region Notificacion
        /// <summary>
        /// Notificación de apertura de mesa / box
        /// </summary>
        /// <param name="IdLocal">Id del local</param>
        /// <param name="IdUbicacion">Id de la ubicación</param>
        /// <param name="IdUsuario">Id del usuario</param>
        /// <returns>Resultado del proceso</returns>
        public Entity.ServiceResult<Core.Util.Common.ProcessResult> Notificar(KantaPe.Entidad.Alerta Alerta)
        {
            Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult> obj_Resultado = null;
            try
            {
                //Alerta tipo apertura
                int int_IdAlertaTipo_Apertura = int.Parse(Kruma.Core.Business.Logical.Parametro.Obtener(
                    Kruma.KantaPe.Entidad.Constante.Parametro.Modulo,
                    Kruma.KantaPe.Entidad.Constante.Parametro.AlertaTipo_Apertura).Valor);
                Alerta.IdAlertaTipo = int_IdAlertaTipo_Apertura;
                Alerta.UsuarioCreacion = Alerta.IdUsuario;

                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<
                    Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.KantaPe.Negocio.Alerta.Notificar(Alerta));
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.Core.Configuration.ConfigurationManager.Default.ApplicationManager["MensajeError"].Value);
                Kruma.Core.Log.LogManager.Write("Exceptions", "Kruma.KantaPe.Service.Logical.Apertura/Notificar", obj_pExcepcion.Message);
            }
            return obj_Resultado;
        }

        public ServiceResult<Kruma.KantaPe.Entidad.Alerta> ObtenerNotificacion(string IdLocal, string IdUbicacion, string IdAlerta)
        {
            Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.KantaPe.Entidad.Alerta> obj_Resultado = null;
            try
            {
                int int_IdLocal = int.Parse(IdLocal);
                int int_IdUbicacion = int.Parse(IdUbicacion);
                int int_IdAlerta = int.Parse(IdAlerta);

                //Obtiene la alerta
                Kruma.KantaPe.Entidad.Alerta obj_AlertaConsulta = Kruma.KantaPe.Negocio.Alerta.Obtener(int_IdLocal, int_IdUbicacion, int_IdAlerta);
                Kruma.KantaPe.Entidad.Alerta obj_Alerta = new Alerta();
                obj_Alerta.IdLocal = obj_AlertaConsulta.IdLocal;
                obj_Alerta.IdUbicacion = obj_AlertaConsulta.IdUbicacion;
                obj_Alerta.IdAlerta = obj_AlertaConsulta.IdAlerta;
                obj_Alerta.IdAlertaTipo = obj_AlertaConsulta.IdAlertaTipo;
                obj_Alerta.IdUsuario = obj_AlertaConsulta.IdUsuario;
                obj_Alerta.Estado = obj_AlertaConsulta.Estado;

                //Obtiene la apertura
                Kruma.KantaPe.Entidad.Apertura obj_AperturaConsulta = Kruma.KantaPe.Negocio.Apertura.ObtenerPorAlerta(int_IdLocal, int_IdAlerta);
                if (obj_AperturaConsulta != null)
                {
                    obj_Alerta.Apertura = new Kruma.KantaPe.Entidad.Apertura();
                    obj_Alerta.Apertura.IdLocal = obj_AperturaConsulta.IdLocal;
                    obj_Alerta.Apertura.IdApertura = obj_AperturaConsulta.IdApertura;
                    obj_Alerta.Apertura.IdMozo = obj_AperturaConsulta.IdMozo;
                    obj_Alerta.Apertura.FechaApertura = obj_AperturaConsulta.FechaApertura;
                    obj_Alerta.Apertura.FechaFinal = obj_AperturaConsulta.FechaFinal;
                    obj_Alerta.Apertura.Total = obj_AperturaConsulta.Total;
                    obj_Alerta.Apertura.IdAlerta = obj_AperturaConsulta.IdAlerta;
                    obj_Alerta.Apertura.Estado = obj_AperturaConsulta.Estado;
                }

                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.KantaPe.Entidad.Alerta>(obj_Alerta);
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.KantaPe.Entidad.Alerta>
                    (Kruma.Core.Configuration.ConfigurationManager.Default.ApplicationManager["MensajeError"].Value);
                Kruma.Core.Log.LogManager.Write("Exceptions", "Kruma.KantaPe.Service.Logical.Apertura/ObtenerNotificacion", obj_pExcepcion.Message);
            }
            return obj_Resultado;
        }

        public ServiceResult<ProcessResult> CancelarNotificacion(Alerta Alerta)
        {
            Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult> obj_Resultado = null;
            try
            {
                Alerta.FechaAtencion = DateTime.Now;
                Alerta.Estado = Kruma.KantaPe.Entidad.Constante.Estado_Cancelado;
                Alerta.UsuarioModificacion = Alerta.IdUsuario;

                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<
                    Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.KantaPe.Negocio.Alerta.Modificar(Alerta));
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.Core.Configuration.ConfigurationManager.Default.ApplicationManager["MensajeError"].Value);
                Kruma.Core.Log.LogManager.Write("Exceptions", "Kruma.KantaPe.Service.Logical.Apertura/CancelarNotificacion", obj_pExcepcion.Message);
            }
            return obj_Resultado;
        }

        public Entity.ServiceResult<Core.Util.Common.ProcessResult> NotificarProducto(KantaPe.Entidad.Alerta Alerta)
        {
            Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult> obj_Resultado = null;
            try
            {
                //Alerta tipo apertura
                int int_IdAlertaTipo_Producto = int.Parse(Kruma.Core.Business.Logical.Parametro.Obtener(
                    Kruma.KantaPe.Entidad.Constante.Parametro.Modulo,
                    Kruma.KantaPe.Entidad.Constante.Parametro.AlertaTipo_Producto).Valor);

                Alerta.IdAlertaTipo = int_IdAlertaTipo_Producto;
                Alerta.UsuarioCreacion = Alerta.IdUsuario;

                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<
                    Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.KantaPe.Negocio.Alerta.Notificar(Alerta));
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.Core.Configuration.ConfigurationManager.Default.ApplicationManager["MensajeError"].Value);
                Kruma.Core.Log.LogManager.Write("Exceptions", "Kruma.KantaPe.Service.Logical.Apertura/NotificarProducto", obj_pExcepcion.Message);
            }
            return obj_Resultado;
        }

        #endregion

        public Entity.ServiceResult<Core.Util.Common.ProcessResult> Insertar(Entidad.AperturaUsuario AperturaUsuario)
        {
            Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult> obj_Resultado = null;
            try
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<
                    Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.KantaPe.Negocio.AperturaUsuario.Insertar(AperturaUsuario));
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.ProcessResult>
                    (Kruma.Core.Configuration.ConfigurationManager.Default.ApplicationManager["MensajeError"].Value);
                Kruma.Core.Log.LogManager.Write("Exceptions", "Kruma.KantaPe.Service.Logical.AperturaUsuario/Insertar", obj_pExcepcion.Message);
            }
            return obj_Resultado;
        }

        public Entity.ServiceResult<Core.Util.Common.List<Entidad.AperturaUsuario>> ListarAperturaUsuario(
             string IdLocal,
             string IdApertura)
        {
            Kruma.KantaPe.Service.Entity.ServiceResult<
                Kruma.Core.Util.Common.List<Kruma.KantaPe.Entidad.AperturaUsuario>> obj_Resultado = null;

            int? int_IdLocal = IdLocal == Constante.NULLTYPE ? null : (int?)int.Parse(IdLocal);
            int? int_IdApertura = IdApertura == Constante.NULLTYPE ? null : (int?)int.Parse(IdApertura);
            try
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<
                    Kruma.Core.Util.Common.List<Kruma.KantaPe.Entidad.AperturaUsuario>>
                    (Kruma.KantaPe.Negocio.AperturaUsuario.Listar(int_IdLocal, int_IdApertura, null, null, null, null , null, null , null )
                    );
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new Kruma.KantaPe.Service.Entity.ServiceResult<Kruma.Core.Util.Common.List<Kruma.KantaPe.Entidad.AperturaUsuario>>
                    (Kruma.Core.Configuration.ConfigurationManager.Default.ApplicationManager["MensajeError"].Value);
                Kruma.Core.Log.LogManager.Write("Exceptions", "Kruma.KantaPe.Service.Logical.LocalCancion/ListarRanking", obj_pExcepcion.Message);
            }
            return obj_Resultado;
        }
    }
}