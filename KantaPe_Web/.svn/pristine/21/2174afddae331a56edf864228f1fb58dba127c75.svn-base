using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Kruma.Core.Util.Common;

namespace Kruma.KantaPe.Negocio
{
    /// <summary>Alerta</summary>
    /// <remarks><list type="bullet">
    /// <item><CreadoPor>Creado por John Castillo</CreadoPor></item>
    /// <item><FecCrea>25-07-2016</FecCrea></item></list></remarks>

    public class Alerta
    {
        #region Metodos Públicos

        /// <summary>Listado de Alerta</summary>
        /// <param name="int_pIdLocal">IdLocal</param>
        /// <param name="int_pIdAlerta">IdAlerta</param>
        /// <param name="int_pIdAlertaTipo">IdAlertaTipo</param>
        /// <param name="dt_pFechaAlerta">FechaAlerta</param>
        /// <param name="str_pIdUsuario">IdUsuario</param>
        /// <param name="str_pEstado">Estado</param>
        /// <param name="int_pNumPagina" >Numero de pagina</param>
        /// <param name="int_pTamPagina" >Tamaño de pagina</param>
        /// <returns>Lista de Alerta</returns>
        /// <remarks><list type="bullet">
        /// <item><CreadoPor>Creado por John Castillo</CreadoPor></item>
        /// <item><FecCrea>25-07-2016</FecCrea></item></list></remarks>
        public static Kruma.Core.Util.Common.List<Kruma.KantaPe.Entidad.Alerta> Listar(
            int? int_pIdLocal,
            int? int_pIdUbicacion,
            int? int_pIdAlerta,
            int? int_pIdAlertaTipo,
            DateTime? dt_pFechaInicio,
            DateTime? dt_pFechaFin,
            string str_pIdUsuario,
            string str_pEstado,
            int? int_pNumPagina,
            int? int_pTamPagina)
        {
            return Kruma.KantaPe.Data.Alerta.Listar(
                int_pIdLocal,
                int_pIdUbicacion,
                int_pIdAlerta,
                int_pIdAlertaTipo,
                dt_pFechaInicio,
                dt_pFechaFin,
                str_pIdUsuario,
                str_pEstado,
                int_pNumPagina,
                int_pTamPagina);
        }

        /// <summary>Obtener Alerta</summary>
        /// <param name="int_pIdLocal">IdLocal</param>
        /// <param name="int_pIdAlerta">IdAlerta</param>
        /// <returns>Objeto Alerta</returns>
        /// <remarks><list type="bullet">
        /// <item><CreadoPor>Creado por John Castillo</CreadoPor></item>
        /// <item><FecCrea>25-07-2016</FecCrea></item></list></remarks>
        public static Kruma.KantaPe.Entidad.Alerta Obtener(int int_pIdLocal, int int_pIdUbicacion, int int_pIdAlerta)
        {
            return Kruma.KantaPe.Data.Alerta.Obtener(int_pIdLocal, int_pIdUbicacion, int_pIdAlerta);
        }

        /// <summary>Insertar Alerta</summary>
        /// <param name="obj_pAlerta">Alerta</param>
        /// <returns>Id de Alerta</returns>
        /// <remarks><list type="bullet">
        /// <item><CreadoPor>Creado por John Castillo</CreadoPor></item>
        /// <item><FecCrea>25-07-2016</FecCrea></item></list></remarks>
        public static ProcessResult Notificar(KantaPe.Entidad.Alerta obj_pAlerta)
        {
            ProcessResult obj_Resultado = null;
            try
            {
                //Creacion de la alerta
                obj_pAlerta.FechaAlerta = DateTime.Now;
                obj_pAlerta.Estado = Kruma.KantaPe.Entidad.Constante.Estado_Pendiente;
                int int_IdAlerta = Kruma.KantaPe.Data.Alerta.Insertar(obj_pAlerta);

                //Notificacion a los mozos
                obj_Resultado = new ProcessResult(int_IdAlerta);
                obj_Resultado.Message = "Se ha notificado al mozo correctamente.";

                //Notificacion de mozos
                NotificarMozos(obj_pAlerta);
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new ProcessResult(obj_pExcepcion);
            }
            return obj_Resultado;
        }

        public static ProcessResult AlertarTurno(Kruma.KantaPe.Entidad.Alerta obj_pAlerta)
        {
            ProcessResult obj_Resultado = null;
            try
            {
                int? int_IdAlerta = Kruma.KantaPe.Data.Alerta.Insertar(obj_pAlerta);
                obj_Resultado = new ProcessResult(int_IdAlerta);

                Kruma.Core.Business.Entity.Parametro obj_TiempoTurno = Kruma.Core.Business.Logical.Parametro.Obtener(
                    Kruma.KantaPe.Entidad.Constante.Parametro.Modulo,
                    Kruma.KantaPe.Entidad.Constante.Parametro.TiempoVerificacionTurno);

                //Se obtiene la apertura actual
                Kruma.KantaPe.Entidad.Apertura obj_Apertura = Kruma.KantaPe.Negocio.Apertura.ObtenerActual(obj_pAlerta.IdLocal.Value, obj_pAlerta.IdUbicacion.Value);
                //Se obtiene los usuarios de la apertura
                System.Collections.Generic.List<Kruma.KantaPe.Entidad.AperturaUsuario> lst_Usuario = Kruma.KantaPe.Negocio.AperturaUsuario.Listar(null, obj_Apertura.IdApertura.Value, null, null, null, null, null, null, null).Result;
                foreach (Kruma.KantaPe.Entidad.AperturaUsuario obj_AperturaUsuario in lst_Usuario)
                    Notificacion.Enviar(obj_pAlerta.IdUsuario, "Turno de mesa", string.Format("Su turno comenzará en {0} segundos"));

            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new ProcessResult(obj_pExcepcion);
            }
            return obj_Resultado;
        }

        /// <summary>Modificar Alerta</summary>
        /// <param name="obj_pAlerta">Alerta</param>
        /// <remarks><list type="bullet">
        /// <item><CreadoPor>Creado por John Castillo</CreadoPor></item>
        /// <item><FecCrea>25-07-2016</FecCrea></item></list></remarks>
        public static ProcessResult Insertar(Kruma.KantaPe.Entidad.Alerta obj_pAlerta)
        {
            ProcessResult obj_Resultado = null;
            try
            {
                int? int_IdAlerta = Kruma.KantaPe.Data.Alerta.Insertar(obj_pAlerta);
                obj_Resultado = new ProcessResult(int_IdAlerta);
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new ProcessResult(obj_pExcepcion);
            }
            return obj_Resultado;
        }

        /// <summary>Modificar Alerta</summary>
        /// <param name="obj_pAlerta">Alerta</param>
        /// <remarks><list type="bullet">
        /// <item><CreadoPor>Creado por John Castillo</CreadoPor></item>
        /// <item><FecCrea>25-07-2016</FecCrea></item></list></remarks>
        public static ProcessResult Modificar(Kruma.KantaPe.Entidad.Alerta obj_pAlerta)
        {
            ProcessResult obj_Resultado = null;
            try
            {
                Kruma.KantaPe.Entidad.Alerta obj_AlertaAModificar = Kruma.KantaPe.Negocio.Alerta.Obtener(
                    obj_pAlerta.IdLocal.Value, obj_pAlerta.IdUbicacion.Value, obj_pAlerta.IdAlerta.Value);

                if (obj_AlertaAModificar.Estado.Equals(KantaPe.Entidad.Constante.Estado_Cancelado))
                    return new ProcessResult(new Exception("La solicitud ya ha sido cancelada."));

                obj_AlertaAModificar.FechaAtencion = obj_pAlerta.FechaAtencion;
                obj_AlertaAModificar.Estado = obj_pAlerta.Estado;
                obj_AlertaAModificar.UsuarioModificacion = obj_pAlerta.UsuarioModificacion;

                Kruma.KantaPe.Data.Alerta.Modificar(obj_AlertaAModificar);
                obj_Resultado = new ProcessResult(obj_AlertaAModificar.IdAlerta);
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new ProcessResult(obj_pExcepcion);
            }
            return obj_Resultado;
        }

        /// <summary>CerrarAlertas</summary>
        /// <remarks><list type="bullet">
        /// <item><CreadoPor>Creado por Diego Mendoza</CreadoPor></item>
        /// <item><FecCrea>29-03-2017</FecCrea></item></list></remarks>
        public static ProcessResult CerrarAlertas(int? int_pIdLocal)
        {
            ProcessResult obj_Resultado = null;
            try
            {
                Kruma.KantaPe.Data.Alerta.CerrarAlertas(int_pIdLocal);
                obj_Resultado = new ProcessResult(true);
            }
            catch (Exception obj_pExcepcion)
            {
                obj_Resultado = new ProcessResult(obj_pExcepcion);
            }
            return obj_Resultado;
        }

        /// <summary>
        /// Notificación de mozos a sus dispositivos
        /// </summary>
        /// <param name="obj_pAlerta">Alerta</param>
        private static void NotificarMozos(Entidad.Alerta obj_pAlerta)
        {
            //Se obtiene el perfil de mozo
            Kruma.Core.Business.Entity.Parametro obj_ParametroPerfil = Kruma.Core.Business.Logical.Parametro.Obtener(
                Kruma.KantaPe.Entidad.Constante.Parametro.Modulo,
                Kruma.KantaPe.Entidad.Constante.Parametro.Perfil_Mozo
                );

            //Se obtiene todos los usuario con perfil mozo
            System.Collections.Generic.List<Kruma.KantaPe.Entidad.Usuario> lst_Mozos =
                Kruma.KantaPe.Negocio.Usuario.Listar(null, null, null, null, null, obj_ParametroPerfil.Valor, null, Kruma.KantaPe.Entidad.Constante.Estado_Activo, null, obj_pAlerta.IdLocal, null, null).Result;

            Kruma.KantaPe.Entidad.Ubicacion obj_Ubicacion = Kruma.KantaPe.Negocio.Ubicacion.Obtener(obj_pAlerta.IdLocal.Value, obj_pAlerta.IdUbicacion.Value);
            Kruma.Core.Security.Entity.Usuario obj_Usuario = Kruma.Core.Security.Logical.Usuario.Obtener(obj_pAlerta.IdUsuario, null);

            string str_Titulo = string.Empty;
            string str_Mensaje = string.Empty;

            if (obj_pAlerta.IdAlertaTipo.Value == Kruma.KantaPe.Entidad.Constante.AlertaTipo_Apertura)
            {
                str_Titulo = string.Format("Apertura de {0} : {1}", obj_Ubicacion.UbicacionTipo.Descripcion, obj_Ubicacion.Numero);
                str_Mensaje = string.Format("El usuario {0} a solicitado apertura : {1} - {2}", obj_Usuario.Persona.NombreCompleto, obj_Ubicacion.UbicacionTipo.Descripcion, obj_Ubicacion.Numero);
            }
            else if (obj_pAlerta.IdAlertaTipo.Value == Kruma.KantaPe.Entidad.Constante.AlertaTipo_Carta)
            {
                str_Titulo = string.Format("Solicitud de Carta de {0} : {1}", obj_Ubicacion.UbicacionTipo.Descripcion, obj_Ubicacion.Numero);
                str_Mensaje = string.Format("El usuario {0} a solicitado la carta : {1} - {2}", obj_Usuario.Persona.NombreCompleto, obj_Ubicacion.UbicacionTipo.Descripcion, obj_Ubicacion.Numero);
            }

            foreach (Kruma.KantaPe.Entidad.Usuario obj_Mozo in lst_Mozos)
            {
                Notificacion.Enviar(obj_Mozo.IdUsuario, str_Titulo, str_Mensaje);
            }
        }

        #endregion
    }
}